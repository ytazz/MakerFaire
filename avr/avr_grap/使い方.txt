
■コンパイル環境と書き込み ------------------------------

(1)
avr8-gnu-toolchain-installer-3.5.4.91-win32.any.x86.exe をインストール
dfu-programmer-win-0.7.0 をインストール
lufa-LUFA-170418 をインストール

(2)
コマンドラインにC:\Program Files (x86)\Atmel\AVR Tools\AVR Toolchain\bin へのパスが追加されていることを確認しておく（たぶんインストールすると自動的に追加される）

(3)
make.exeをavr-toolchain-installer-3.4.2.1573-win32.win32.x86.exeなどから取り出してC:\Program Files (x86)\Atmel\AVR Tools\AVR Toolchain\binに置く

(4)
Makefileのパスを書き換える(LUFA_PATH, DFU_PATH)


(5)
make clean	※パスを変えたら必ず必要
make

コンパイルが正常に完了すること(main.hexが出力される)

(6)
FlipInstaller-3.4.5.106.exe を予めインストールしておく（ドライバが必要）
同じ型のボードでも初めて接続するときはドライバを認識しないと書き込み失敗するので注意
flipで書き込む

■ビルドの切り替え ------------------------------

操作卓とグラップルは同一プロジェクトなので、マクロで切り替えてビルドします。

GrapCommon.h
#define IR_RECEIVER 0	※操作卓側は0、グラップル側は1
#define TEST_BOARD 0	※テスト用ボードなら1とする (Tntさんは常に0で使うと思う)

■改造の方法 ------------------------------

〇赤外線の送信機能
main()からIrTransmissionProc()を定期的に呼び出すだけです。
※7セグやロータリーエンコーダの処理は割込みで行われているので気にする必要ないです

もし、main()中のループの待ち時間(1.5ms)を変更して動作がおかしくなった場合には相談ください。

〇USBシリアルへの出力方法
fputs(str, &USBSerialStream);
※tazzさんプログラムと同じ

〇スイッチの追加
スイッチが押されたのを検知して、赤外線送信命令「IrSend(data)」を実行する。
dataにはコマンドコードが入ります。
【注】なるべく毎回赤外線を送らないようにしてください。
　変化を検知するようにするといいです。（IrTransmissionProc()中のTEST_BOARDで囲われた中のコードを参考に）

〇赤外線のコマンドコード
	IR_CODE_RELAY_ON:　電磁石ON
	IR_CODE_RELAY_OFF:　電磁石OFF
	IR_CODE_MOTOR_OFF:　モーター強制OFF
	上記以外の値(-256〜256)はモーター指令値として扱われます。


■簡易テストの方法 ------------------------------

アップされているプログラムそのままで動かして、ロータリーエンコーダを回転させたときのみ：
(1)７セグLEDの表示数値が変化する
(2)赤外線LEDが暗めの点灯で点滅する（点灯しっぱなしや不点灯、明るめの点灯にならないこと）
(3)赤外線LEDのパワートランジスタが熱くなっていないこと

2018/7/4 inrabbit
